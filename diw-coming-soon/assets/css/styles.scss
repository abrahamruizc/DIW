@use 'variables';
@use 'mixins';

/*
* DIW: Parte 1: 
* Usar una variable para establecer el valor inicial de h1 
* Crear los siguientes h restando 6px a cada uno.
* Utilizar un bucle para crear los h de forma automática
*/

@for $i from 1 to 7 {
    h#{$i}{
        @if $i==1 {
            font-size: variables.$h-tamano;
        } @else {
            font-size: variables.$h-tamano  - 6*$i +6;
        }
    }
}

/*
* DIW: FIN Parte 1. 
*/

/*
* DIW: Parte 2: 
* Usar anidamientos de la forma más optima posible
*/
.w3-table {
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  display: table;
  td{
    padding: 8px 8px;
    display: table-cell;
    text-align: left;
    vertical-align: top;

    &:first-child{
      padding-left: 16px;
    }
  }

  th{
    padding: 8px 8px;
    display: table-cell;
    text-align: left;
    vertical-align: top;

    &:first-child{
      padding-left: 16px;
    }
  }
}

.w3-table-all{
  border-collapse: collapse;
  border-spacing: 0;
  width: 100%;
  display: table;
  border: 1px solid #ccc;

  tr{
    border-bottom: 1px solid #ddd;

    &:nth-child(odd){
      background-color: #fff;
    }

    &:nth-child(even){
      background-color: #f1f1f1;
    }
  }
}

.w3-bordered {
  tr{
    border-bottom: 1px solid #ddd;
  }
}

.w3-striped {
  tbody{
    tr{
      &:nth-child(even){
        background-color: #f1f1f1; 
      }
    }
  }
}

.w3-hoverable{
  tbody{
    tr{
      &:hover{
        background-color: #ccc;
      }
    }
  }
}

.w3-ul.w3-hoverable{
  li{
    &:hover{
      background-color: #ccc;
    }
  }
}

.w3-centered{
  tr{
    th{
      text-align: center;
    }
    td{
      text-align: center;
    }
  }
}
/*
* DIW: DIW: FIN Parte 2. 
*/

/*
* DIW: Parte 3: 
* Usar una variable para establecer el valor inicial de s1 
* Crear los siguientes h restando multiplicando por 2 cada uno.
* Utilizar un bucle para crear los s1 de forma automática
*/
@for $i from 1 to 13 {
  .w3-col.s#{$i}{
      @if $i==1 {
        width: variables.$col-tamano;
      } @else {
          font-size: variables.$col-tamano * 2 * $i /2;
      }
  }
}

/*
* DIW: DIW: FIN Parte 3. 
*/

/*
* DIW: Parte 4: 
* Usar bucles y variables para autocalcular valores dinámicos
* Usar anidamiento.
*  
*/

@media (min-width: 601px) {

  @for $i from 1 to 13 {
    .w3-col.m#{$i}{
      @if $i==1 {
        width: variables.$col-tamano;
      } @else {
          font-size: variables.$col-tamano * 2 * $i /2;
      }
    }
    @if $i == 3{
      .w3-quarter{
        font-size: variables.$col-tamano * 2 * $i /2;
      }
    } @else if $i== 4 {
      .w3-quarter{
        font-size: variables.$col-tamano * 2 * $i /2;
      }
    } @else if $i == 6 {
      .w3-half{
        font-size: variables.$col-tamano * 2 * $i /2;
      }
    } @else if $i == 8 {
      .w3-twothird{
        font-size: variables.$col-tamano * 2 * $i /2;
      }
    } @else if $i == 9 {
      .w3-threequarter{
        font-size: variables.$col-tamano * 2 * $i /2;
      }
    }
  }

}

@media (min-width: 993px) {

  @for $i from 1 to 13 {
    .w3-col.l#{$i}{
      @if $i==1 {
        width: variables.$col-tamano;
      } @else {
          font-size: variables.$col-tamano * 2 * $i /2;
      }
    }
  }
}

/*
* DIW: DIW: FIN Parte 4. 
*/

/*
* DIW: Parte 6: 
* Crea una clase que se llame .w3-display con position: absolute y con @extend crea una especialización de cada una de las siguientes
* Utiliza un mixin para no repetir left:0 y top:0 en todos los display donde sea requerido.
*/

.w3-display{
  @include mixins.absolute;
}

.w3-display-topleft {
  @extend .w3-display;
  @include mixins.topleft(0,0);
}
.w3-display-topright {
  @extend .w3-display;
  right: 0;
  top: 0;
}
.w3-display-bottomleft {
  @extend .w3-display;
  left: 0;
  bottom: 0;
}
.w3-display-bottomright {
  @extend .w3-display;
  right: 0;
  bottom: 0;
}
.w3-display-middle {
  @extend .w3-display;
  @include mixins.topleft(50%,50%);
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
}
.w3-display-left {
  @extend .w3-display;
  @include mixins.topleft(50%,0%);
  transform: translate(0%, -50%);
  -ms-transform: translate(-0%, -50%);
}
.w3-display-right {
  @extend .w3-display;
  top: 50%;
  right: 0%;
  transform: translate(0%, -50%);
  -ms-transform: translate(0%, -50%);
}
.w3-display-topmiddle {
  @extend .w3-display;
  @include mixins.topleft(0,50%);
  transform: translate(-50%, 0%);
  -ms-transform: translate(-50%, 0%);
}
.w3-display-bottommiddle {
  @extend .w3-display;
  left: 50%;
  bottom: 0;
  transform: translate(-50%, 0%);
  -ms-transform: translate(-50%, 0%);
}
/*
* DIW: Fin parte 6
*/

/*
* DIW: Parte 7: 
* Utilizar anidamiento para el .w3-animate
*/

.w3-animate{

  &-fading{
    animation: fading 10s infinite;
  }

  &-opacity{
    animation: opac 0.8s;
  }

  &-top{
    position: relative;
    animation: animatetop 0.4s;
  }

  &-left{
    position: relative;
    animation: animateleft 0.4s;
  }

  &-right{
    position: relative;
    animation: animateright 0.4s;
  }

  &-bottom{
    position: relative;
    animation: animatebottom 0.4s;
  }

  &-zoom{
    animation: animatezoom 0.6s;
  }

  &-input{
    transition: width 0.4s ease-in-out;
    :focus{
      width: 100% !important;
    }
  }

}

@keyframes fading {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes opac {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes animatetop {
  from {
    top: -300px;
    opacity: 0;
  }
  to {
    top: 0;
    opacity: 1;
  }
}
@keyframes animateleft {
  from {
    left: -300px;
    opacity: 0;
  }
  to {
    left: 0;
    opacity: 1;
  }
}
@keyframes animateright {
  from {
    right: -300px;
    opacity: 0;
  }
  to {
    right: 0;
    opacity: 1;
  }
}
@keyframes animatebottom {
  from {
    bottom: -300px;
    opacity: 0;
  }
  to {
    bottom: 0;
    opacity: 1;
  }
}
@keyframes animatezoom {
  from {
    transform: scale(0);
  }
  to {
    transform: scale(1);
  }
}
/*
* DIW: Fin de la Parte 7
*/